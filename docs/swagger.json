{
    "openapi": "3.0.0",
    "info": {
        "title": "Home Cooked Meals API (Mock)",
        "version": "1.0.0",
        "description": "Mock API simulation using localStorage for the Home Cooked Meals website."
    },
    "servers": [
        {
            "url": "javascript:handleApiRequest",
            "description": "Simulated API via JavaScript function"
        }
    ],
    "paths": {
        "/api/meals": {
            "get": {
                "summary": "List meals (all or filtered)",
                "description": "Lists all meals, or filters by ID or categoryId.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Get one meal by ID"
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "List meals in a category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of meals or a single meal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Meal"
                                        },
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Meal"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "summary": "Create a new meal",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMeal"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessId"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            },
            "put": {
                "summary": "Update an existing meal",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMeal"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "summary": "Delete a meal",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the meal to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/meals/featured": {
            "get": {
                "summary": "List all featured meals",
                "description": "Gets meals where 'isFeatured' is true.",
                "responses": {
                    "200": {
                        "description": "A list of featured meals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Meal"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "summary": "List categories (all or filtered)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Get one category by ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of categories or a single category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Category"
                                        },
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "summary": "Create a new category",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessId"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            },
            "put": {
                "summary": "Update a category",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "summary": "Delete a category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the category to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/categories/{categoryId}/meals": {
            "get": {
                "summary": "List all meals in a specific category",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of meals in the category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Meal"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "summary": "Add an existing meal to a category",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mealId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "mealId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "summary": "Remove a meal from a category",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mealId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/appointments": {
            "get": {
                "summary": "List appointments (all or filtered)",
                "description": "Lists all appointments or gets one by ID. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Get one appointment by ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of appointments or a single appointment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Appointment"
                                        },
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Appointment"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "summary": "Book a new appointment",
                "description": "Creates a new appointment slot. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewAppointment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessId"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "put": {
                "summary": "Update an existing appointment",
                "description": "Reschedules or updates the status of an appointment. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAppointment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "summary": "Cancel an appointment",
                "description": "Deletes (or marks as cancelled) an appointment. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the appointment to cancel"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "summary": "Get cart contents (Client-side)",
                "description": "Retrieves cart from localStorage.",
                "responses": {
                    "200": {
                        "description": "Cart data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CartItem"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add item to cart (Client-side)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartActionItem"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessCart"
                    }
                }
            },
            "put": {
                "summary": "Update item quantity in cart (Client-side)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartActionItem"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessCart"
                    }
                }
            },
            "delete": {
                "summary": "Remove item from cart (Client-side)",
                "parameters": [
                    {
                        "name": "mealId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessCart"
                    }
                }
            }
        },
        "/api/cart/clear": {
            "delete": {
                "summary": "Empty cart (Client-side)",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessCartEmpty"
                    }
                }
            }
        },
        "/api/checkout": {
            "post": {
                "summary": "Finalize purchase and create an order",
                "description": "Takes cart contents and payment info, creates an order, and clears the cart. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckoutRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessOrderId"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "summary": "List orders (all or filtered by ID)",
                "description": "Lists all orders (admin view) or retrieves a specific order by ID. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Get one order by ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of orders or a single order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "summary": "Update order status",
                "description": "Updates the status of an existing order (e.g., processing, shipped). Requires authentication (likely admin).",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "summary": "Cancel/Delete an order",
                "description": "Cancels or deletes an order (use with caution!). Requires authentication (likely admin).",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the order to delete/cancel"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "summary": "Register a new user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SuccessUserId"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "Log in a user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginCredentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SuccessLogin"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "summary": "Log out a user (Client clears token)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Get user profile",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "summary": "Update user profile",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "summary": "Delete user profile",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/subscribe": {
            "post": {
                "summary": "Subscribe to newsletter",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Meal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "url"
                    },
                    "isFeatured": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "NewMeal": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "url"
                    },
                    "isFeatured": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "price",
                    "description",
                    "imageUrl"
                ]
            },
            "UpdateMeal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "url"
                    },
                    "isFeatured": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "NewCategory": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UpdateCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "Appointment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the appointment"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user who booked the appointment"
                    },
                    "datetime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Scheduled date and time for pickup/delivery"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "completed",
                            "cancelled"
                        ],
                        "description": "Current status of the appointment"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the appointment was booked"
                    }
                }
            },
            "NewAppointment": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user booking the appointment"
                    },
                    "datetime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date and time"
                    }
                },
                "required": [
                    "userId",
                    "datetime"
                ]
            },
            "UpdateAppointment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the appointment to update"
                    },
                    "datetime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "New date and time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "completed",
                            "cancelled"
                        ],
                        "description": "New status"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "CartItem": {
                "type": "object",
                "properties": {
                    "mealId": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    }
                }
            },
            "CartActionItem": {
                "type": "object",
                "properties": {
                    "mealId": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "mealId",
                    "qty"
                ]
            },
            "OrderItem": {
                "type": "object",
                "properties": {
                    "mealId": {
                        "type": "string"
                    },
                    "qty": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the meal at the time of order"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price per unit at the time of order"
                    }
                },
                "required": [
                    "mealId",
                    "qty",
                    "name",
                    "price"
                ]
            },
            "Order": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "Unique identifier for the order"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user who placed the order"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        },
                        "description": "List of items included in the order"
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "description": "Total amount charged for the order"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "awaiting_pickup",
                            "out_for_delivery",
                            "completed",
                            "cancelled"
                        ],
                        "description": "Current status of the order"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the order was placed"
                    },
                    "appointmentId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Associated appointment ID, if any"
                    },
                    "paymentStatus": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "succeeded",
                            "failed"
                        ],
                        "default": "pending"
                    }
                }
            },
            "CheckoutRequest": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user checking out (may be redundant if using auth token)"
                    },
                    "cart": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartActionItem"
                        },
                        "description": "The cart contents being checked out"
                    },
                    "paymentInfo": {
                        "type": "object",
                        "description": "Placeholder for payment details (e.g., card token, method)",
                        "example": {
                            "method": "mock_card",
                            "token": "tok_xxxxxxxxxxxxx"
                        }
                    },
                    "appointmentId": {
                        "type": "string",
                        "nullable": true,
                        "description": "ID of the selected appointment slot (optional)"
                    }
                },
                "required": [
                    "userId",
                    "cart",
                    "paymentInfo"
                ]
            },
            "UpdateOrder": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "awaiting_pickup",
                            "out_for_delivery",
                            "completed",
                            "cancelled"
                        ],
                        "description": "The new status for the order"
                    }
                },
                "required": [
                    "orderId",
                    "status"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "NewUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "UpdateUser": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "required": [
                    "userId"
                ]
            },
            "LoginCredentials": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            }
        },
        "responses": {
            "Success": {
                "description": "Operation successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            },
            "SuccessId": {
                "description": "Creation successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "SuccessUserId": {
                "description": "Creation successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "userId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "SuccessLogin": {
                "description": "Login successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "token": {
                                    "type": "string",
                                    "example": "simulated-jwt-token"
                                },
                                "user": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "SuccessCart": {
                "description": "Cart operation successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "cart": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CartItem"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SuccessCartEmpty": {
                "description": "Cart cleared",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "cart": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Invalid input",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Authentication failed or token missing/invalid",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT (simulated)"
            }
        },
        "SuccessOrderId": {
            "description": "Checkout successful, order created",
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "boolean",
                                "example": true
                            },
                            "orderId": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    }
}